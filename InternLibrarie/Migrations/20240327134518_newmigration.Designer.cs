// <auto-generated />
using System;
using InternshipLibrarie.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InternLibrarie.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240327134518_newmigration")]
    partial class newmigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InternshipLibrarie.Models.Bills", b =>
                {
                    b.Property<int>("BillsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillsId"), 1L, 1);

                    b.Property<int>("BorrowedBookid")
                        .HasColumnType("int");

                    b.Property<int>("borrow_id")
                        .HasColumnType("int");

                    b.HasKey("BillsId");

                    b.HasIndex("BorrowedBookid");

                    b.ToTable("bills");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Books", b =>
                {
                    b.Property<int>("BooksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BooksId"), 1L, 1);

                    b.Property<string>("author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total_copies")
                        .HasColumnType("int");

                    b.HasKey("BooksId");

                    b.ToTable("books");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.BorrowedBooks", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("book_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("borrow_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("overdue_fees")
                        .HasColumnType("int");

                    b.Property<DateTime>("return_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("book_id");

                    b.HasIndex("user_id");

                    b.ToTable("borrowedbooks");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Subscriptions", b =>
                {
                    b.Property<int>("SubscriptionsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SubscriptionsId"), 1L, 1);

                    b.Property<DateTime>("subscription_expiry_date")
                        .HasColumnType("datetime2");

                    b.Property<string>("subscription_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("user_id")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionsId");

                    b.HasIndex("user_id")
                        .IsUnique();

                    b.ToTable("subscriptions");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Users", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("is_admin")
                        .HasColumnType("bit");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("total_books_borrowed")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("total_fees_due")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.ToTable("users");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Bills", b =>
                {
                    b.HasOne("InternshipLibrarie.Models.BorrowedBooks", "BorrowedBook")
                        .WithMany()
                        .HasForeignKey("BorrowedBookid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BorrowedBook");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.BorrowedBooks", b =>
                {
                    b.HasOne("InternshipLibrarie.Models.Books", "Book")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("book_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("InternshipLibrarie.Models.Users", "User")
                        .WithMany("BorrowedBooks")
                        .HasForeignKey("user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Book");

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Subscriptions", b =>
                {
                    b.HasOne("InternshipLibrarie.Models.Users", "User")
                        .WithOne("subscription")
                        .HasForeignKey("InternshipLibrarie.Models.Subscriptions", "user_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Books", b =>
                {
                    b.Navigation("BorrowedBooks");
                });

            modelBuilder.Entity("InternshipLibrarie.Models.Users", b =>
                {
                    b.Navigation("BorrowedBooks");

                    b.Navigation("subscription")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
